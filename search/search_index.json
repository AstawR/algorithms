{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"arrays/","text":"","title":"Arrays"},{"location":"graphs/","text":"","title":"Graphs"},{"location":"hash%20tables/","text":"","title":"Hash Tables"},{"location":"linked%20lists/","text":"","title":"Linked Lists"},{"location":"lists/","text":"Lists Definition __ A list is a collection of values stored behind a variable. Each value is referred to as an 'element' and can be called when needed by either value or index. A single list can contain multiple data types, including strings, integers and bools. Built-in methods are used to add and remove elements from a list: .append(X) - adds X to the end of the list. .insert(Y, X) - inserts X into the list at the Y position. .remove(X) - removes the specified X value from the list. .pop(Y) - removes element at Y position. Examples __ Creating a List: num_list = [2, 3, 6, 8, 10] # list of integers. word_list = [\"Red\", \"Painting\", \"Misc\", \"Jack\"] # list of strings. _list = [2, \"Red\", False, 12.34] # list of various data types. Referencing a List: print(num_list[0]) # prints 2. print(word_list[3]) # prints \"Jack\". print(_list[2]) # prints False. Modifying a List: word_list[2] = \"Miscellaneous\" print(word_list) # prints [\"Red\", \"Painting\", \"Miscellanous\", \"Jack\"]. Adding and Removing Elements: num_list.append(12) print(num_list) # prints [2, 3, 6, 8, 10, 12]. num_list.insert(1, 4) print(num_list) # prints [2, 4, 6, 8, 10, 12]. num_list.remove(10) print(num_list) # prints [2, 4, 6, 8, 12]. num_list.pop(0) print(num_list) # prints [4, 6, 8, 12].","title":"List"},{"location":"lists/#lists","text":"","title":"Lists"},{"location":"lists/#_1","text":"","title":""},{"location":"lists/#definition","text":"__ A list is a collection of values stored behind a variable. Each value is referred to as an 'element' and can be called when needed by either value or index. A single list can contain multiple data types, including strings, integers and bools. Built-in methods are used to add and remove elements from a list: .append(X) - adds X to the end of the list. .insert(Y, X) - inserts X into the list at the Y position. .remove(X) - removes the specified X value from the list. .pop(Y) - removes element at Y position.","title":"Definition"},{"location":"lists/#_2","text":"","title":""},{"location":"lists/#examples","text":"__","title":"Examples"},{"location":"lists/#_3","text":"Creating a List: num_list = [2, 3, 6, 8, 10] # list of integers. word_list = [\"Red\", \"Painting\", \"Misc\", \"Jack\"] # list of strings. _list = [2, \"Red\", False, 12.34] # list of various data types. Referencing a List: print(num_list[0]) # prints 2. print(word_list[3]) # prints \"Jack\". print(_list[2]) # prints False. Modifying a List: word_list[2] = \"Miscellaneous\" print(word_list) # prints [\"Red\", \"Painting\", \"Miscellanous\", \"Jack\"]. Adding and Removing Elements: num_list.append(12) print(num_list) # prints [2, 3, 6, 8, 10, 12]. num_list.insert(1, 4) print(num_list) # prints [2, 4, 6, 8, 10, 12]. num_list.remove(10) print(num_list) # prints [2, 4, 6, 8, 12]. num_list.pop(0) print(num_list) # prints [4, 6, 8, 12].","title":""},{"location":"queues/","text":"","title":"Queues"},{"location":"sets/","text":"","title":"Sets"},{"location":"stack/","text":"","title":"Stack"},{"location":"trees/","text":"","title":"Trees"}]}